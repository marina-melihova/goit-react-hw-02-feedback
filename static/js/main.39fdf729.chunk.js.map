{"version":3,"sources":["components/section/Section.module.css","components/App.module.css","components/feedbackOptions/FeedbackOptions.module.css","components/statistics/Statistics.js","components/section/Section.js","components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","map","option","key","btn","type","onClick","name","Notification","message","App","state","changeState","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPercentage","Math","round","this","container","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,qBCA7DD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,gBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,sMCgCTC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,4BACE,qCACQ,8BAAOJ,IAEf,wCACW,8BAAOC,IAElB,oCACO,8BAAOC,IAEd,sCACS,8BAAOC,IAEhB,kDACqB,8BAAOC,EAAqB,Q,gBCAxCC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BAASC,UAAWC,IAAMC,SACxB,wBAAIF,UAAWC,IAAMH,OAAQA,GAC5BC,I,gBCmBQI,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLP,UAAWC,IAAMQ,IACjBC,KAAK,SACLC,QAAS,kBAAMN,EAAgBE,IAC/BK,KAAML,GAELA,QCLIM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAMA,ICqDAC,E,4MAjDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,YAAc,SAAAL,GAAI,OAChB,EAAKM,UAAS,SAAAC,GAAS,sBAAQP,EAAOO,EAAUP,GAAQ,O,EAE1DQ,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAErC,OADAD,GAAOC,IAEN,I,EAELC,gBAAkB,SAACD,EAAM9B,GAEvB,OADgBA,EAAQgC,KAAKC,MAAc,IAAPH,EAAc9B,GAAS,G,uDAInD,IAAD,EACwBkC,KAAKb,MAA5BxB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQkC,KAAKT,qBACnB,OACE,yBAAKpB,UAAWC,IAAM6B,WACpB,kBAAC,EAAD,CAAShC,MAAM,yBACb,kBAAC,EAAD,CACEM,QAAO,YAAMiB,OAAOU,KAAKF,KAAKb,QAC9BX,gBAAiBwB,KAAKZ,eAG1B,kBAAC,EAAD,CAASnB,MAAM,cACZH,EACC,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBiC,KAAKH,gBAAgBlC,EAAMG,KAGjD,kBAAC,EAAD,CAAcmB,QAAQ,4B,GA1ChBkB,aCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.39fdf729.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__16SJk\",\"title\":\"Section_title__3jlU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3UY9S\",\"total\":\"App_total__37CcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__aigMv\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        Good: <span>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral: <span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad: <span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total: <span>{total}</span>\r\n      </li>\r\n      <li>\r\n        Positive feedback: <span>{positivePercentage + '%'}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={style.section}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          className={style.btn}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n          name={option}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div>{message}</div>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport style from './App.module.css';\nimport Statistics from './statistics/Statistics';\nimport Section from './section/Section';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Notification from './notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeState = name =>\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, item) => {\n      acc += item;\n      return acc;\n    }, 0);\n\n  countPercentage = (item, total) => {\n    const percent = total ? Math.round((item * 100) / total) : 0;\n    return percent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    return (\n      <div className={style.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[...Object.keys(this.state)]}\n            onLeaveFeedback={this.changeState}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.countPercentage(good, total)}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}